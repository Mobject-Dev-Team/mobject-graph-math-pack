<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.15">
  <POU Name="MathComparisonPack" Id="{7c62dd03-e791-4ab0-9386-56a6d55e2659}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK MathComparisonPack IMPLEMENTS I_GraphPack
VAR
	GT_BYTE : GT_BYTE;
	GT_DINT : GT_DINT;
	GT_DWORD : GT_DWORD;
	GT_INT : GT_INT;
	GT_LINT : GT_LINT;
	GT_LREAL : GT_LREAL;
	GT_LWORD : GT_LWORD;
	GT_REAL : GT_REAL;
	GT_SINT : GT_SINT;
	GT_UDINT : GT_UDINT;
	GT_UINT : GT_UINT;
	GT_ULINT : GT_ULINT;
	GT_USINT : GT_USINT;
	GT_WORD : GT_WORD;
	
	LT_BYTE : LT_BYTE;
	LT_DINT : LT_DINT;
	LT_DWORD : LT_DWORD;
	LT_INT : LT_INT;
	LT_LINT : LT_LINT;
	LT_LREAL : LT_LREAL;
	LT_LWORD : LT_LWORD;
	LT_REAL : LT_REAL;
	LT_SINT : LT_SINT;
	LT_UDINT : LT_UDINT;
	LT_UINT : LT_UINT;
	LT_ULINT : LT_ULINT;
	LT_USINT : LT_USINT;
	LT_WORD : LT_WORD;
	
	EQ_BYTE : EQ_BYTE;
	EQ_DINT : EQ_DINT;
	EQ_DWORD : EQ_DWORD;
	EQ_INT : EQ_INT;
	EQ_LINT : EQ_LINT;
	EQ_LREAL : EQ_LREAL;
	EQ_LWORD : EQ_LWORD;
	EQ_REAL : EQ_REAL;
	EQ_SINT : EQ_SINT;
	EQ_UDINT : EQ_UDINT;
	EQ_UINT : EQ_UINT;
	EQ_ULINT : EQ_ULINT;
	EQ_USINT : EQ_USINT;
	EQ_WORD : EQ_WORD;
	
	NE_BYTE : NE_BYTE;
	NE_DINT : NE_DINT;
	NE_DWORD : NE_DWORD;
	NE_INT : NE_INT;
	NE_LINT : NE_LINT;
	NE_LREAL : NE_LREAL;
	NE_LWORD : NE_LWORD;
	NE_REAL : NE_REAL;
	NE_SINT : NE_SINT;
	NE_UDINT : NE_UDINT;
	NE_UINT : NE_UINT;
	NE_ULINT : NE_ULINT;
	NE_USINT : NE_USINT;
	NE_WORD : NE_WORD;
	
	LE_BYTE : LE_BYTE;
	LE_DINT : LE_DINT;
	LE_DWORD : LE_DWORD;
	LE_INT : LE_INT;
	LE_LINT : LE_LINT;
	LE_LREAL : LE_LREAL;
	LE_LWORD : LE_LWORD;
	LE_REAL : LE_REAL;
	LE_SINT : LE_SINT;
	LE_UDINT : LE_UDINT;
	LE_UINT : LE_UINT;
	LE_ULINT : LE_ULINT;
	LE_USINT : LE_USINT;
	LE_WORD : LE_WORD;
	
	GE_BYTE : GE_BYTE;
	GE_DINT : GE_DINT;
	GE_DWORD : GE_DWORD;
	GE_INT : GE_INT;
	GE_LINT : GE_LINT;
	GE_LREAL : GE_LREAL;
	GE_LWORD : GE_LWORD;
	GE_REAL : GE_REAL;
	GE_SINT : GE_SINT;
	GE_UDINT : GE_UDINT;
	GE_UINT : GE_UINT;
	GE_ULINT : GE_ULINT;
	GE_USINT : GE_USINT;
	GE_WORD : GE_WORD;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="Register" Id="{ffbb9721-56cb-4fcd-80e9-769e498bd035}">
      <Declaration><![CDATA[METHOD Register
VAR_INPUT
	Datatypes : I_Datatypes;
	NodeFactory : I_NodeFactory;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[NodeFactory.AddNodeAsPrototype('Math/Comparison/GT/GT_BYTE',GT_BYTE);
NodeFactory.AddNodeAsPrototype('Math/Comparison/GT/GT_DINT',GT_DINT);
NodeFactory.AddNodeAsPrototype('Math/Comparison/GT/GT_DWORD',GT_DWORD);
NodeFactory.AddNodeAsPrototype('Math/Comparison/GT/GT_INT',GT_INT);
NodeFactory.AddNodeAsPrototype('Math/Comparison/GT/GT_LINT',GT_LINT);
NodeFactory.AddNodeAsPrototype('Math/Comparison/GT/GT_LREAL',GT_LREAL);
NodeFactory.AddNodeAsPrototype('Math/Comparison/GT/GT_LWORD',GT_LWORD);
NodeFactory.AddNodeAsPrototype('Math/Comparison/GT/GT_REAL',GT_REAL);
NodeFactory.AddNodeAsPrototype('Math/Comparison/GT/GT_SINT',GT_SINT);
NodeFactory.AddNodeAsPrototype('Math/Comparison/GT/GT_UDINT',GT_UDINT);
NodeFactory.AddNodeAsPrototype('Math/Comparison/GT/GT_UINT',GT_UINT);
NodeFactory.AddNodeAsPrototype('Math/Comparison/GT/GT_ULINT',GT_ULINT);
NodeFactory.AddNodeAsPrototype('Math/Comparison/GT/GT_USINT',GT_USINT);
NodeFactory.AddNodeAsPrototype('Math/Comparison/GT/GT_WORD',GT_WORD);

NodeFactory.AddNodeAsPrototype('Math/Comparison/LT/LT_BYTE',LT_BYTE);
NodeFactory.AddNodeAsPrototype('Math/Comparison/LT/LT_DINT',LT_DINT);
NodeFactory.AddNodeAsPrototype('Math/Comparison/LT/LT_DWORD',LT_DWORD);
NodeFactory.AddNodeAsPrototype('Math/Comparison/LT/LT_INT',LT_INT);
NodeFactory.AddNodeAsPrototype('Math/Comparison/LT/LT_LINT',LT_LINT);
NodeFactory.AddNodeAsPrototype('Math/Comparison/LT/LT_LREAL',LT_LREAL);
NodeFactory.AddNodeAsPrototype('Math/Comparison/LT/LT_LWORD',LT_LWORD);
NodeFactory.AddNodeAsPrototype('Math/Comparison/LT/LT_REAL',LT_REAL);
NodeFactory.AddNodeAsPrototype('Math/Comparison/LT/LT_SINT',LT_SINT);
NodeFactory.AddNodeAsPrototype('Math/Comparison/LT/LT_UDINT',LT_UDINT);
NodeFactory.AddNodeAsPrototype('Math/Comparison/LT/LT_UINT',LT_UINT);
NodeFactory.AddNodeAsPrototype('Math/Comparison/LT/LT_ULINT',LT_ULINT);
NodeFactory.AddNodeAsPrototype('Math/Comparison/LT/LT_USINT',LT_USINT);
NodeFactory.AddNodeAsPrototype('Math/Comparison/LT/LT_WORD',LT_WORD);

NodeFactory.AddNodeAsPrototype('Math/Comparison/EQ/EQ_BYTE',EQ_BYTE);
NodeFactory.AddNodeAsPrototype('Math/Comparison/EQ/EQ_DINT',EQ_DINT);
NodeFactory.AddNodeAsPrototype('Math/Comparison/EQ/EQ_DWORD',EQ_DWORD);
NodeFactory.AddNodeAsPrototype('Math/Comparison/EQ/EQ_INT',EQ_INT);
NodeFactory.AddNodeAsPrototype('Math/Comparison/EQ/EQ_LINT',EQ_LINT);
NodeFactory.AddNodeAsPrototype('Math/Comparison/EQ/EQ_LREAL',EQ_LREAL);
NodeFactory.AddNodeAsPrototype('Math/Comparison/EQ/EQ_LWORD',EQ_LWORD);
NodeFactory.AddNodeAsPrototype('Math/Comparison/EQ/EQ_REAL',EQ_REAL);
NodeFactory.AddNodeAsPrototype('Math/Comparison/EQ/EQ_SINT',EQ_SINT);
NodeFactory.AddNodeAsPrototype('Math/Comparison/EQ/EQ_UDINT',EQ_UDINT);
NodeFactory.AddNodeAsPrototype('Math/Comparison/EQ/EQ_UINT',EQ_UINT);
NodeFactory.AddNodeAsPrototype('Math/Comparison/EQ/EQ_ULINT',EQ_ULINT);
NodeFactory.AddNodeAsPrototype('Math/Comparison/EQ/EQ_USINT',EQ_USINT);
NodeFactory.AddNodeAsPrototype('Math/Comparison/EQ/EQ_WORD',EQ_WORD);

NodeFactory.AddNodeAsPrototype('Math/Comparison/NE/NE_BYTE',NE_BYTE);
NodeFactory.AddNodeAsPrototype('Math/Comparison/NE/NE_DINT',NE_DINT);
NodeFactory.AddNodeAsPrototype('Math/Comparison/NE/NE_DWORD',NE_DWORD);
NodeFactory.AddNodeAsPrototype('Math/Comparison/NE/NE_INT',NE_INT);
NodeFactory.AddNodeAsPrototype('Math/Comparison/NE/NE_LINT',NE_LINT);
NodeFactory.AddNodeAsPrototype('Math/Comparison/NE/NE_LREAL',NE_LREAL);
NodeFactory.AddNodeAsPrototype('Math/Comparison/NE/NE_LWORD',NE_LWORD);
NodeFactory.AddNodeAsPrototype('Math/Comparison/NE/NE_REAL',NE_REAL);
NodeFactory.AddNodeAsPrototype('Math/Comparison/NE/NE_SINT',NE_SINT);
NodeFactory.AddNodeAsPrototype('Math/Comparison/NE/NE_UDINT',NE_UDINT);
NodeFactory.AddNodeAsPrototype('Math/Comparison/NE/NE_UINT',NE_UINT);
NodeFactory.AddNodeAsPrototype('Math/Comparison/NE/NE_ULINT',NE_ULINT);
NodeFactory.AddNodeAsPrototype('Math/Comparison/NE/NE_USINT',NE_USINT);
NodeFactory.AddNodeAsPrototype('Math/Comparison/NE/NE_WORD',NE_WORD);

NodeFactory.AddNodeAsPrototype('Math/Comparison/LE/LE_BYTE',LE_BYTE);
NodeFactory.AddNodeAsPrototype('Math/Comparison/LE/LE_DINT',LE_DINT);
NodeFactory.AddNodeAsPrototype('Math/Comparison/LE/LE_DWORD',LE_DWORD);
NodeFactory.AddNodeAsPrototype('Math/Comparison/LE/LE_INT',LE_INT);
NodeFactory.AddNodeAsPrototype('Math/Comparison/LE/LE_LINT',LE_LINT);
NodeFactory.AddNodeAsPrototype('Math/Comparison/LE/LE_LREAL',LE_LREAL);
NodeFactory.AddNodeAsPrototype('Math/Comparison/LE/LE_LWORD',LE_LWORD);
NodeFactory.AddNodeAsPrototype('Math/Comparison/LE/LE_REAL',LE_REAL);
NodeFactory.AddNodeAsPrototype('Math/Comparison/LE/LE_SINT',LE_SINT);
NodeFactory.AddNodeAsPrototype('Math/Comparison/LE/LE_UDINT',LE_UDINT);
NodeFactory.AddNodeAsPrototype('Math/Comparison/LE/LE_UINT',LE_UINT);
NodeFactory.AddNodeAsPrototype('Math/Comparison/LE/LE_ULINT',LE_ULINT);
NodeFactory.AddNodeAsPrototype('Math/Comparison/LE/LE_USINT',LE_USINT);
NodeFactory.AddNodeAsPrototype('Math/Comparison/LE/LE_WORD',LE_WORD);

NodeFactory.AddNodeAsPrototype('Math/Comparison/GE/GE_BYTE',GE_BYTE);
NodeFactory.AddNodeAsPrototype('Math/Comparison/GE/GE_DINT',GE_DINT);
NodeFactory.AddNodeAsPrototype('Math/Comparison/GE/GE_DWORD',GE_DWORD);
NodeFactory.AddNodeAsPrototype('Math/Comparison/GE/GE_INT',GE_INT);
NodeFactory.AddNodeAsPrototype('Math/Comparison/GE/GE_LINT',GE_LINT);
NodeFactory.AddNodeAsPrototype('Math/Comparison/GE/GE_LREAL',GE_LREAL);
NodeFactory.AddNodeAsPrototype('Math/Comparison/GE/GE_LWORD',GE_LWORD);
NodeFactory.AddNodeAsPrototype('Math/Comparison/GE/GE_REAL',GE_REAL);
NodeFactory.AddNodeAsPrototype('Math/Comparison/GE/GE_SINT',GE_SINT);
NodeFactory.AddNodeAsPrototype('Math/Comparison/GE/GE_UDINT',GE_UDINT);
NodeFactory.AddNodeAsPrototype('Math/Comparison/GE/GE_UINT',GE_UINT);
NodeFactory.AddNodeAsPrototype('Math/Comparison/GE/GE_ULINT',GE_ULINT);
NodeFactory.AddNodeAsPrototype('Math/Comparison/GE/GE_USINT',GE_USINT);
NodeFactory.AddNodeAsPrototype('Math/Comparison/GE/GE_WORD',GE_WORD);]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>